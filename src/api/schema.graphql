# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
    mutation: Mutation
}

type CategoryType {
    id: ID!
    name: String!
    posts: [PostType!]!
}

type CreatePost {
    errors: [String]
    success: Boolean
}

type DeleteJSONWebTokenCookie {
    deleted: Boolean!
}

type KeywordType {
    id: ID!
    name: String!
    posts: [PostType!]!
}

type Mutation {
    createPost(input: PostInput!): CreatePost
    deleteToken: DeleteJSONWebTokenCookie
    refreshToken(token: String): Refresh
    "Obtain JSON Web Token mutation"
    tokenAuth(password: String!, username: String!): ObtainJSONWebToken
    updatePost(id: ID!, input: PostInput!): UpdatePost
    verifyToken(token: String): Verify
}

"Obtain JSON Web Token mutation"
type ObtainJSONWebToken {
    payload: GenericScalar!
    refreshExpiresIn: Int!
    token: String!
}

type PostType {
    category: CategoryType!
    dateModified: DateTime!
    datePublished: DateTime!
    id: ID!
    image: String
    keywords: [KeywordType!]!
    name: String!
    text: String
    writtenBy: UserType
}

type Query {
    categoryDetail(id: ID!): CategoryType
    categoryList: [CategoryType]
    hello: String
    keywordDetail(id: ID!): KeywordType
    keywordList: [KeywordType]
    me: UserType
    postDetail(id: ID!): PostType
    postList(categoryId: ID, keywordId: ID): [PostType]
    userDetail(username: String!): UserType
}

type Refresh {
    payload: GenericScalar!
    refreshExpiresIn: Int!
    token: String!
}

type UpdatePost {
    errors: [String]
    success: Boolean
}

type UserType {
    firstName: String!
    id: ID!
    lastName: String!
    posts: [PostType!]!
    "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only."
    username: String!
}

type Verify {
    payload: GenericScalar!
}

"""

The `DateTime` scalar type represents a DateTime
value as specified by
[iso8601](https://en.wikipedia.org/wiki/ISO_8601).
"""
scalar DateTime

"""

The `GenericScalar` scalar type represents a generic
GraphQL scalar value that could be:
String, Boolean, Int, Float, List or Object.
"""
scalar GenericScalar

input PostInput {
    categoryId: ID
    image: String
    keywords: [ID]
    name: String
    text: String
}
